{
	"patcher" : 	{
		"boxes" : [ 			{
				"box" : 				{
					"maxclass" : "comment",
					"text" : "dst buffer",
					"patching_rect" : [ 277.0, 12.0, 58.0, 20.0 ],
					"numoutlets" : 0,
					"numinlets" : 1,
					"id" : "obj-18"
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "button",
					"patching_rect" : [ 10.0, 10.0, 24.0, 24.0 ],
					"numoutlets" : 1,
					"outlettype" : [ "bang" ],
					"numinlets" : 1,
					"id" : "obj-16",
					"parameter_enable" : 0
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "attrui",
					"patching_rect" : [ 56.0, 35.0, 219.0, 22.0 ],
					"numoutlets" : 1,
					"attr" : "type",
					"outlettype" : [ "" ],
					"numinlets" : 1,
					"id" : "obj-14",
					"parameter_enable" : 0
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "attrui",
					"patching_rect" : [ 56.0, 11.0, 219.0, 22.0 ],
					"numoutlets" : 1,
					"attr" : "dst",
					"outlettype" : [ "" ],
					"numinlets" : 1,
					"id" : "obj-13",
					"parameter_enable" : 0
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "comment",
					"text" : "allocate windowing function to a buffer",
					"patching_rect" : [ 55.804196268320084, 105.64158234000206, 212.0, 20.0 ],
					"numoutlets" : 0,
					"numinlets" : 1,
					"id" : "obj-9"
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "button",
					"patching_rect" : [ 10.0, 152.543680727481842, 24.0, 24.0 ],
					"numoutlets" : 1,
					"outlettype" : [ "bang" ],
					"numinlets" : 1,
					"id" : "obj-5",
					"parameter_enable" : 0
				}

			}
, 			{
				"box" : 				{
					"maxclass" : "newobj",
					"text" : "v8",
					"patching_rect" : [ 10.0, 104.64158234000206, 21.0, 22.0 ],
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"numinlets" : 1,
					"id" : "obj-8",
					"filename" : "none",
					"textfile" : 					{
						"text" : "var type = 'hanning';\ndeclareattribute('type', { style: 'enum', enumvals: ['hanning', 'hamming', 'blackman', 'birtlett', 'sin', 'akaike', 'welch', 'square'] });\n\nvar dst = 'dst';\ndeclareattribute('dst', { type: 'symbol', setter: 'setDst' });\n\nlet buffer = new Buffer(dst);\n\n\nfunction setDst(newDst) {\n    dst    = newDst;\n    buffer = new Buffer(dst);\n}\n\nfunction calcHanning(x) {\n    return 0.5 - 0.5 * Math.cos(2 * Math.PI * x);\n}\n\nfunction calcHamming(x) {\n    return 0.54 - 0.46 * Math.cos(Math.PI * 2 * x);\n}\n\nfunction calcBlackman(x) {\n    return 0.42 - 0.5 * Math.cos(Math.PI * 2 * x) + 0.08 * Math.cos(4 * Math.PI * x); \n}\n\nfunction calcBirtlett(x) {\n    return 1 - 2 * Math.abs(x - 0.5);\n}\n\nfunction calcSin(x) {\n    return Math.sin(Math.PI * x);\n}\n\nfunction calcAkaike(x) {\n    return 0.625 -  0.5 * Math.cos(Math.PI * 2 * x) - 0.125 * Math.cos(2 * Math.PI * 2 * x);\n}\n\nfunction calcWelch(x) {\n    return 4 * x * (1 - x);\n}\n\nfunction calcSquare(x) {\n    return 1;\n}\n\n\nfunction bang() {\n    let dst_length  = buffer.framecount();\n    let delta       = 1 / dst_length;\n\n    for(let i = 0; i < dst_length; i += 1) {\n        let x = delta * i;\n        let y = 0;\n\n        switch(type) {\n            case 'hanning':\n                y = calcHanning(x);\n                break;\n            case 'hamming':\n                y = calcHamming(x);\n                break;\n            case 'blackman':\n                y = calcBlackman(x);\n                break;\n            case 'birtlett':\n                y = calcBirtlett(x);\n                break;\n            case 'sin':\n                y = calcSin(x);\n                break;\n            case 'akaike':\n                y = calcAkaike(x);\n                break;\n            case 'welch':\n                y = calcWelch(x);\n                break;\n            case 'square':\n                y = calcSquare(x);\n                break;\n            default:\n                break;\n        }\n\n        buffer.poke(0, i, y);\n    }\n\n    outlet(0, 'bang');\n}",
						"filename" : "none",
						"flags" : 0,
						"embed" : 1,
						"autowatch" : 1
					}
,
					"saved_object_attributes" : 					{
						"parameter_enable" : 0
					}

				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"source" : [ "obj-16", 0 ],
					"destination" : [ "obj-8", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"source" : [ "obj-14", 0 ],
					"destination" : [ "obj-8", 0 ],
					"midpoints" : [ 65.5, 89.232361167669296, 19.5, 89.232361167669296 ]
				}

			}
, 			{
				"patchline" : 				{
					"source" : [ "obj-13", 0 ],
					"destination" : [ "obj-8", 0 ],
					"midpoints" : [ 65.5, 89.309165959013626, 19.5, 89.309165959013626 ]
				}

			}
, 			{
				"patchline" : 				{
					"source" : [ "obj-8", 0 ],
					"destination" : [ "obj-5", 0 ]
				}

			}
 ],
		"appversion" : 		{
			"major" : 9,
			"minor" : 0,
			"revision" : 4,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "box",
		"description" : "325 x 166, containing 7 objects",
		"tags" : "",
		"snippetinfo" : 		{
			"name" : "allocate windowing function to a buffer",
			"objects" : "comment, attrui, button, v8",
			"tags" : "",
			"description" : "325 x 166, containing 7 objects",
			"image" : ""
		}

	}

}
